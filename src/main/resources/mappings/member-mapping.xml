<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MemberMapper">
	<!--  -->
	<select id="getMember" resultType="member">
		select * from member where id=#{id}
	</select>
	<!--  -->
	<select id="confirmID" resultType="String">
		select pwd from member where id=#{id}
	</select>
	
	<select id="joinconfirmNickname" resultType="String">
		select id from member where nickname=#{nickname}
	</select>
	
		<select id="modifyconfirmNickname" resultType="String">
		select id from member where nickname=#{nickname} and id != #{id}
	</select>
	
	<select id="confirmMail" resultType="String">
		select id from member where email=#{email}
	</select>
	
	<select id="adminCheck" resultType="String">
		SELECT admin FROM member WHERE id=#{id}
	</select>
	
	<insert id="insertMember">
		INSERT INTO member(id, pwd, name, email, address, nickname, phone)
		VALUES (#{id}, #{pwd}, #{name}, #{email}, #{address}, #{nickname}, #{phone})
	</insert>
	
<!-- 이름과 이메일로 아이디 찾기  -->
	<select id="selectIdByNameEmail" resultType="String">
		SELECT id FROM member WHERE name=#{name}
	</select>
	
<!-- 아이디, 이름, 이메일로 비밀번호 찾기  -->
	<select id="selectPwdByIdNameEmail" resultType="String">
		SELECT pwd FROM member WHERE id=#{id} AND name=#{name} AND email=#{email}
	</select>
	
<!-- 메일 보내기 -->
	<select id="getPwdByNameEmail" resultType="String">
		SELECT pwd FROM member WHERE name = #{name}
	</select>
	
	<update id="modifyMember">
	UPDATE member SET password =#{password} nickname=#{nickname} address=#{address}, nickname=#{nickname}, phone=#{phone} WHERE id = #{id}
	</update>
	
	<!-- 회원 등급 업데이트 -->
	<update id="gradeUpdate">
		 UPDATE member SET grade = #{grade} WHERE id = #{id}
	</update>
	
	<!-- 등급 업데이트 대상 아이디 검색 -->
	<select id="sumPriceById" resultType="String">
		<![CDATA[
		 SELECT m.id FROM member m, cart c, order_detail od
	   	  WHERE m.id = c.id 
	        AND c.cart_no = od.cart_no
	        AND od.result = '1'
	        GROUP BY m.id
	        HAVING SUM(c.total_price) >= #{sum_price}
	        ]]>
	</select>
		<!-- 어드민 멤버리스트 -->
	<select id="listMember" resultType="member">
		select * from member
			where name like '%'||#{name}||'%'
			order by name
	</select>
	
	<select id="listMemberWithPaging" resultType="member">
		<![CDATA[
		SELECT rn, id, name, nickname, phone, address, email, grade, regdate
		FROM (
  		SELECT row_number() OVER (ORDER BY name) rn, id, name, nickname, phone, address, email, grade, regdate
  		FROM member
 		WHERE name LIKE '%'||#{name}||'%')
		WHERE rn <= #{criteria.pageNum} * #{criteria.rowsPerPage}
		AND rn > (#{criteria.pageNum}-1) * #{criteria.rowsPerPage}
		]]>
	</select>
	
	<select id="countmemberlist" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM member
		 WHERE name LIKE '%'||#{name}||'%'
	</select>
	
	
</mapper>
